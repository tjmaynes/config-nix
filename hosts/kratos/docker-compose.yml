version: "3.3"

services:
  jellyfin-server:
    image: linuxserver/jellyfin:amd64-10.8.1
    container_name: jellyfin-server
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${JELLYFIN_BASE_DIRECTORY}/config:/config
      - ${MEDIA_DIRECTORY}:/media
    environment:
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_SERVER_URL}

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:0.6.19
    container_name: calibre-web
    restart: unless-stopped
    networks:
      - default
    ports:
      - ${CALIBRE_WEB_PORT}:8083
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=linuxserver/mods:universal-calibre
    volumes:
      - ${CALIBRE_WEB_BASE_DIRECTORY}/config:/config
      - ${BOOKS_DIRECTORY}:/books

  gogs-web:
    image: gogs/gogs:0.12
    container_name: gogs-web
    restart: always
    ports:
      - ${GOGS_PORT}:3000
      - ${GOGS_SSH_PORT}:22
    networks:
      - default
    environment:
      - RUN_CROND=true
    volumes:
      - ${GOGS_BASE_DIRECTORY}/data:/data
    depends_on:
      - gogs-db

  gogs-db:
    image: postgres:14
    container_name: gogs-db
    restart: always
    networks:
      - default
    ports:
      - ${GOGS_DATABASE_PORT}:5432
    environment:
      - POSTGRES_USER=${GOGS_USER}
      - POSTGRES_PASSWORD=${GOGS_DATABASE_PASSWORD}
      - POSTGRES_DB=${GOGS_DATABASE}
    volumes:
      - ${GOGS_DATABASE_BASE_DIRECTORY}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GOGS_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  home-assistant-web:
    image: ghcr.io/home-assistant/home-assistant:2022.8.3
    container_name: home-assistant-web
    restart: always
    network_mode: host
    volumes:
      - ${HOME_ASSISTANT_BASE_DIRECTORY}/config:/config
    environment:
      - TZ=${TIMEZONE}

  homer-web:
    image: b4bz/homer:v22.07.2
    container_name: homer-web
    restart: always
    networks:
      - default
    ports:
      - ${HOMER_WEB_PORT}:8080
    volumes:
      - ${HOMER_WEB_BASE_DIRECTORY}/www/assets:/www/assets
    environment:
      - INIT_ASSETS=0

  tailscale-agent:
      image: tailscale/tailscale:v1.29.125
      container_name: tailscale-agent
      hostname: kratos
      privileged: true
      network_mode: host
      volumes:
        - ${TAILSCALE_BASE_DIRECTORY}/var/lib:/var/lib   # State data will be stored in this directory
        - /dev/net/tun:/dev/net/tun
      cap_add:
        - net_admin
        - sys_module
      command: tailscaled
      restart: unless-stopped

  audiobookshelf-web:
    image: ghcr.io/advplyr/audiobookshelf:2.1.2
    container_name: audiobookshelf-web
    networks:
      - default
    ports:
      - ${AUDIOBOOKSHELF_PORT}:80
    environment:
      - AUDIOBOOKSHELF_UID=${PUID}
      - AUDIOBOOKSHELF_GID=${PGID}
    volumes:
      - ${AUDIOBOOKS_DIRECTORY}:/audiobooks
      - ${PODCASTS_DIRECTORY}:/podcasts
      - ${AUDIOBOOKSHELF_BASE_DIRECTORY}/config:/config
      - ${AUDIOBOOKSHELF_BASE_DIRECTORY}/metadata:/metadata

  podgrab-web:
    image: akhilrex/podgrab:1.0.0
    container_name: podgrab-web
    environment:
      - CHECK_FREQUENCY=240
    volumes:
      - ${PODGRAB_BASE_DIRECTORY}/config:/config
      - ${PODCASTS_DIRECTORY}:/assets
    ports:
      - ${PODGRAB_PORT}:8080
    restart: unless-stopped

networks:
  default:
    driver: bridge
